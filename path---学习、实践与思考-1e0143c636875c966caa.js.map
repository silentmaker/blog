{"version":3,"sources":["webpack:///path---学习、实践与思考-1e0143c636875c966caa.js","webpack:///./.cache/json/学习、实践与思考.json"],"names":["webpackJsonp","488","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","tags","categories","date","pathContext","slug","previous","fields","path","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,eAAAC,OAAA,aAA4CC,gBAAmBC,GAAA,uFAAAC,KAAA,82BAAAC,aAAg+BL,MAAA,cAAAM,KAAA,KAAAC,YAAA,MAAAC,KAAA,oBAAgFC,aAAgBC,KAAA,aAAAC,UAAgCC,QAAUF,KAAA,eAAqBL,aAAgBQ,KAAA,iCAAAb,MAAA,YAAAM,MAAA,eAAAC,YAAA,QAAwGO,MAASF,QAAUF,KAAA,cAAoBL,aAAgBQ,KAAA,qBAAAb,MAAA,WAAAM,MAAA,MAAAC,YAAA","file":"path---学习、实践与思考-1e0143c636875c966caa.js","sourcesContent":["webpackJsonp([131797384516832],{\n\n/***/ 488:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Elvin's Blog\",\"author\":\"Elvin Ma\"}},\"markdownRemark\":{\"id\":\"/Users/maxingcong/Code/blog/src/pages/学习、实践与思考.md absPath of file >>> MarkdownRemark\",\"html\":\"<blockquote>\\n<p>万丈高楼平地起，莫在浮沙筑高台</p>\\n</blockquote>\\n<h3>打好基础</h3>\\n<p>不管是学一门编程语言，还是学特定的框架或者库，都得从打好基础开始，而最好的方法就是阅读官方文档和示例代码，甚至源代码。</p>\\n<p>如果有些官方文档对初学者不够友好，开始的时候可以适当地采用费曼技巧，先找到一份与你要学习的内容相关的任何资料，可以是某篇技术博客上的文章或者stackoverflow上一某个问题，然后找出里面所有你不知道的概念进行搜索，然后再递归进行这个过程，直到理解大部分的基本概念，这个阶段的学习路径是树状发散的，不需要太钻牛角尖，主要解决Why、What、How的问题，也就是为什么出现这项技术？它能做到什么？是怎么做到的？</p>\\n<p>阅读文档时最好同时也自己跑几遍示例代码，也就是英语里喜欢说的『Get your hands dirty.』，做和教最能够巩固已经学习的内容，在过程中体会之前学习的基本概念，以及其这样设计的原因。</p>\\n<h3>提升视野</h3>\\n<p>扩充信息来源</p>\\n<p>多读书</p>\\n<p>1.技术文章是必须要看的，了解行业动态，扩展技术面。\\n2.了解原理，不只是应用，了解深度。\\n3.看看开源的代码。了解别人的设计。\\n4.典型的书籍是一定要看的。</p>\\n<h3>思考共性</h3>\\n<p>社会也是一个复杂的系统，软件是一种管理复杂度的系统，为了应对复杂度，社会的运转和软件的开发都引入了分工</p>\\n<p>系统思维，系统方法论。用系统科学的思维方法处理具体工程。比如搭建系统结构，能量转化途径与方式，信息系统的构建更新，从而实现某种功能。还需要考虑系统外部环境的关系，平行系统之间的关系。用系统方法论的好处是全面，没有遗漏的地方，因果关系明确，谁跟谁的关系一目了然，而且还可以量化各种关系，逐步推动系统发展。</p>\\n<blockquote>\\n<p>学而不思则罔，思而不学则殆</p>\\n</blockquote>\",\"frontmatter\":{\"title\":\"关于学习积累的一些思考\",\"tags\":null,\"categories\":[\"成长\"],\"date\":\"March 12, 2018\"}}},\"pathContext\":{\"slug\":\"/学习、实践与思考/\",\"previous\":{\"fields\":{\"slug\":\"/函数式编程基本概念/\"},\"frontmatter\":{\"path\":\"/functional-programming-basics\",\"title\":\"函数式编程基本概念\",\"tags\":[\"Programming\"],\"categories\":[\"编程\"]}},\"next\":{\"fields\":{\"slug\":\"/前端监控系统总结/\"},\"frontmatter\":{\"path\":\"/front-end-monitor\",\"title\":\"前端监控系统总结\",\"tags\":[\"前端\"],\"categories\":[\"编程\"]}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---学习、实践与思考-1e0143c636875c966caa.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Elvin's Blog\",\"author\":\"Elvin Ma\"}},\"markdownRemark\":{\"id\":\"/Users/maxingcong/Code/blog/src/pages/学习、实践与思考.md absPath of file >>> MarkdownRemark\",\"html\":\"<blockquote>\\n<p>万丈高楼平地起，莫在浮沙筑高台</p>\\n</blockquote>\\n<h3>打好基础</h3>\\n<p>不管是学一门编程语言，还是学特定的框架或者库，都得从打好基础开始，而最好的方法就是阅读官方文档和示例代码，甚至源代码。</p>\\n<p>如果有些官方文档对初学者不够友好，开始的时候可以适当地采用费曼技巧，先找到一份与你要学习的内容相关的任何资料，可以是某篇技术博客上的文章或者stackoverflow上一某个问题，然后找出里面所有你不知道的概念进行搜索，然后再递归进行这个过程，直到理解大部分的基本概念，这个阶段的学习路径是树状发散的，不需要太钻牛角尖，主要解决Why、What、How的问题，也就是为什么出现这项技术？它能做到什么？是怎么做到的？</p>\\n<p>阅读文档时最好同时也自己跑几遍示例代码，也就是英语里喜欢说的『Get your hands dirty.』，做和教最能够巩固已经学习的内容，在过程中体会之前学习的基本概念，以及其这样设计的原因。</p>\\n<h3>提升视野</h3>\\n<p>扩充信息来源</p>\\n<p>多读书</p>\\n<p>1.技术文章是必须要看的，了解行业动态，扩展技术面。\\n2.了解原理，不只是应用，了解深度。\\n3.看看开源的代码。了解别人的设计。\\n4.典型的书籍是一定要看的。</p>\\n<h3>思考共性</h3>\\n<p>社会也是一个复杂的系统，软件是一种管理复杂度的系统，为了应对复杂度，社会的运转和软件的开发都引入了分工</p>\\n<p>系统思维，系统方法论。用系统科学的思维方法处理具体工程。比如搭建系统结构，能量转化途径与方式，信息系统的构建更新，从而实现某种功能。还需要考虑系统外部环境的关系，平行系统之间的关系。用系统方法论的好处是全面，没有遗漏的地方，因果关系明确，谁跟谁的关系一目了然，而且还可以量化各种关系，逐步推动系统发展。</p>\\n<blockquote>\\n<p>学而不思则罔，思而不学则殆</p>\\n</blockquote>\",\"frontmatter\":{\"title\":\"关于学习积累的一些思考\",\"tags\":null,\"categories\":[\"成长\"],\"date\":\"March 12, 2018\"}}},\"pathContext\":{\"slug\":\"/学习、实践与思考/\",\"previous\":{\"fields\":{\"slug\":\"/函数式编程基本概念/\"},\"frontmatter\":{\"path\":\"/functional-programming-basics\",\"title\":\"函数式编程基本概念\",\"tags\":[\"Programming\"],\"categories\":[\"编程\"]}},\"next\":{\"fields\":{\"slug\":\"/前端监控系统总结/\"},\"frontmatter\":{\"path\":\"/front-end-monitor\",\"title\":\"前端监控系统总结\",\"tags\":[\"前端\"],\"categories\":[\"编程\"]}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/学习、实践与思考.json\n// module id = 488\n// module chunks = 131797384516832"],"sourceRoot":""}