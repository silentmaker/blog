{"version":3,"sources":["webpack:///path---javascript忍者禁术笔记-function-1d0e8fd83baea10b2954.js","webpack:///./.cache/json/javascript忍者禁术笔记-function.json"],"names":["webpackJsonp","458","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","tags","categories","date","pathContext","slug","previous","fields","path","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,eAAAC,OAAA,aAA4CC,gBAAmBC,GAAA,wGAAAC,KAAA,6kCAAAC,aAAguCL,MAAA,2BAAAM,MAAA,cAAAC,YAAA,MAAAC,KAAA,oBAAuGC,aAAgBC,KAAA,8BAAAC,UAAiDC,QAAUF,KAAA,aAAmBL,aAAgBQ,KAAA,oBAAAb,MAAA,UAAAM,MAAA,cAAAC,YAAA,QAAwFO,MAASF,QAAUF,KAAA,6BAAmCL,aAAgBQ,KAAA,6BAAAb,MAAA,4BAAAM,MAAA,cAAAC,YAAA","file":"path---javascript忍者禁术笔记-function-1d0e8fd83baea10b2954.js","sourcesContent":["webpackJsonp([115002713898180],{\n\n/***/ 458:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Elvin's Blog\",\"author\":\"Elvin Ma\"}},\"markdownRemark\":{\"id\":\"/Users/maxingcong/Code/blog/src/pages/Javascript忍者禁术笔记-Function.md absPath of file >>> MarkdownRemark\",\"html\":\"<h5>运行机制</h5>\\n<p>javascript是解释型语言，采用JIT(Just In Time)机制，运行用机器码并不是提前生成的(AOT, Ahead Of Time)，这是与C等编译型语言的主要不同之一，javascript还具有很多独特的语言特性：</p>\\n<ul>\\n<li>函数作为一等公民</li>\\n<li>函数闭包</li>\\n<li>基于原型的面向对象</li>\\n</ul>\\n<h5>运行环境</h5>\\n<p>在客户端和服务端的运行环境有所不同</p>\\n<p><img src=\\\"/Users/maxingcong/Code/blog/src/pages/images/runtime-difference.png\\\" alt=\\\"Runtime\\\"></p>\\n<h5>Web应用的生命周期</h5>\\n<p><img src=\\\"/Users/maxingcong/Code/blog/src/pages/images/webapp-lifecycle.png\\\" alt=\\\"Life Cycle\\\"></p>\\n<p>基本分成两步：Page Building 阶段和 Event Handling 阶段</p>\\n<h5>Page Building 阶段</h5>\\n<p>在 Page Building 阶段主要做两件事： </p>\\n<p>1 解析HTML并构建DOM </p>\\n<p>2 遇到script标签时，运行 Javascript 代码 </p>\\n<p>浏览器在有需要的情况下会不停在1和2间切换</p>\\n<p><img src=\\\"/Users/maxingcong/Code/blog/src/pages/images/dom-endurance.png\\\" alt=\\\"DOM Building\\\"></p>\\n<p>同时，浏览器会自动容错，构建可用的DOM</p>\\n<h5>Event handling阶段</h5>\\n<p><img src=\\\"/Users/maxingcong/Code/blog/src/pages/images/event-handling.png\\\" alt=\\\"Event Handling\\\"></p>\\n<p>这个阶段有很多种事件可能会被触发：浏览器事件(如load)，网络事件(如ajax)，用户事件(如click)，定时器事件(如setTimeout)等，用户和服务器生成的事件通常放在同个队列里依次执行，绑定事件的方法一般是对特殊属性(如onload)赋值或者使用addEventListener方法</p>\",\"frontmatter\":{\"title\":\"Javascript忍者禁术笔记-Runtime\",\"tags\":[\"javascript\"],\"categories\":[\"编程\"],\"date\":\"April 10, 2017\"}}},\"pathContext\":{\"slug\":\"/Javascript忍者禁术笔记-Function/\",\"previous\":{\"fields\":{\"slug\":\"/JS的模块系统/\"},\"frontmatter\":{\"path\":\"/js-module-system\",\"title\":\"JS的模块系统\",\"tags\":[\"javascript\"],\"categories\":[\"编程\"]}},\"next\":{\"fields\":{\"slug\":\"/Javascript忍者禁术笔记-Object/\"},\"frontmatter\":{\"path\":\"/javascript-ninja-function\",\"title\":\"Javascript忍者禁术笔记-Function\",\"tags\":[\"javascript\"],\"categories\":[\"编程\"]}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript忍者禁术笔记-function-1d0e8fd83baea10b2954.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Elvin's Blog\",\"author\":\"Elvin Ma\"}},\"markdownRemark\":{\"id\":\"/Users/maxingcong/Code/blog/src/pages/Javascript忍者禁术笔记-Function.md absPath of file >>> MarkdownRemark\",\"html\":\"<h5>运行机制</h5>\\n<p>javascript是解释型语言，采用JIT(Just In Time)机制，运行用机器码并不是提前生成的(AOT, Ahead Of Time)，这是与C等编译型语言的主要不同之一，javascript还具有很多独特的语言特性：</p>\\n<ul>\\n<li>函数作为一等公民</li>\\n<li>函数闭包</li>\\n<li>基于原型的面向对象</li>\\n</ul>\\n<h5>运行环境</h5>\\n<p>在客户端和服务端的运行环境有所不同</p>\\n<p><img src=\\\"/Users/maxingcong/Code/blog/src/pages/images/runtime-difference.png\\\" alt=\\\"Runtime\\\"></p>\\n<h5>Web应用的生命周期</h5>\\n<p><img src=\\\"/Users/maxingcong/Code/blog/src/pages/images/webapp-lifecycle.png\\\" alt=\\\"Life Cycle\\\"></p>\\n<p>基本分成两步：Page Building 阶段和 Event Handling 阶段</p>\\n<h5>Page Building 阶段</h5>\\n<p>在 Page Building 阶段主要做两件事： </p>\\n<p>1 解析HTML并构建DOM </p>\\n<p>2 遇到script标签时，运行 Javascript 代码 </p>\\n<p>浏览器在有需要的情况下会不停在1和2间切换</p>\\n<p><img src=\\\"/Users/maxingcong/Code/blog/src/pages/images/dom-endurance.png\\\" alt=\\\"DOM Building\\\"></p>\\n<p>同时，浏览器会自动容错，构建可用的DOM</p>\\n<h5>Event handling阶段</h5>\\n<p><img src=\\\"/Users/maxingcong/Code/blog/src/pages/images/event-handling.png\\\" alt=\\\"Event Handling\\\"></p>\\n<p>这个阶段有很多种事件可能会被触发：浏览器事件(如load)，网络事件(如ajax)，用户事件(如click)，定时器事件(如setTimeout)等，用户和服务器生成的事件通常放在同个队列里依次执行，绑定事件的方法一般是对特殊属性(如onload)赋值或者使用addEventListener方法</p>\",\"frontmatter\":{\"title\":\"Javascript忍者禁术笔记-Runtime\",\"tags\":[\"javascript\"],\"categories\":[\"编程\"],\"date\":\"April 10, 2017\"}}},\"pathContext\":{\"slug\":\"/Javascript忍者禁术笔记-Function/\",\"previous\":{\"fields\":{\"slug\":\"/JS的模块系统/\"},\"frontmatter\":{\"path\":\"/js-module-system\",\"title\":\"JS的模块系统\",\"tags\":[\"javascript\"],\"categories\":[\"编程\"]}},\"next\":{\"fields\":{\"slug\":\"/Javascript忍者禁术笔记-Object/\"},\"frontmatter\":{\"path\":\"/javascript-ninja-function\",\"title\":\"Javascript忍者禁术笔记-Function\",\"tags\":[\"javascript\"],\"categories\":[\"编程\"]}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript忍者禁术笔记-function.json\n// module id = 458\n// module chunks = 115002713898180"],"sourceRoot":""}