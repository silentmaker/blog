{"version":3,"sources":["webpack:///path---前端工程师的一专多长-cff86bd2be5630b66a9d.js","webpack:///./.cache/json/前端工程师的一专多长.json"],"names":["webpackJsonp","518","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","tags","categories","date","pathContext","slug","previous","fields","path","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,eAAAC,OAAA,aAA4CC,gBAAmBC,GAAA,yFAAAC,KAAA,4vBAAAC,aAAg3BL,MAAA,aAAAM,MAAA,MAAAC,YAAA,MAAAC,KAAA,kBAA+EC,aAAgBC,KAAA,eAAAC,UAAkCC,QAAUF,KAAA,mBAAyBL,aAAgBQ,KAAA,wBAAAb,MAAA,kBAAAM,MAAA,WAAAC,YAAA,SAAkGO,MAASF,QAAUF,KAAA,aAAmBL,aAAgBQ,KAAA,eAAAb,MAAA,UAAAM,MAAA,cAAAC,YAAA","file":"path---前端工程师的一专多长-cff86bd2be5630b66a9d.js","sourcesContent":["webpackJsonp([245073411151466],{\n\n/***/ 518:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Elvin's Blog\",\"author\":\"Elvin Ma\"}},\"markdownRemark\":{\"id\":\"/Users/maxingcong/Code/blog/src/pages/前端工程师的一专多长.md absPath of file >>> MarkdownRemark\",\"html\":\"<h5>技术的道路</h5>\\n<p>技术的学习状态可以分为四种：学习技能 - 得出成果 - 提炼技术 - 升华为哲学</p>\\n<p>在工作中，前端是一个与设计、产品、后台、运营以及用户都有很多交集的领域，导致前端工作内容常常很广泛，比如在前端通常需要能够指出不好的体验设计或者交互设计，要与后台一起规范化接口的设计，要与运营一同考虑用户的打开场景，对运营创意提供实现方案和斟酌成本，前端</p>\\n<h5>工具化思维</h5>\\n<p>工具化的主要目的是提升效率，节约人力成本</p>\\n<p>现在很多团队都采用螺旋瀑布式开发的开发，产生了很多重复造轮子的工具，也就存在可以通过工具化来优化的地方，举一些公司内部的例子来看：</p>\\n<p>比如设计需求的管理，包括公司已购版权的图片或者字体，还有通用的VI设计，以前没有统一的平台可以获取想着信息，而且各个团队自己去抢设计资源，直到后来有了 dcloud设计云，  </p>\\n<p>比如在公司内外部发邮件，通过 signature.oa.com生成自己的邮件签名，可以让邮件沟通更加规范和权威</p>\\n<p>比如CDC的图片自动提交系统，自动压缩，自动生成雪碧图，设计师更新图片后便可以自行操作，减少了工作环节和沟通成本</p>\\n<p>比如鲁班智能设计系统，节约了很多设计人力，满足了很多常规和紧急的运营需求</p>\\n<h5>从技术到哲学</h5>\\n<p>做技术，和做生意，甚至和炒股都有一些共性的地方存在，不同领域的技术常常也有可以相互学习借鉴的点</p>\\n<p>很多事情的出发点都是成本和利润，比如从前端的文件优化的大小和数量中去抠数据，计算出节约的带宽成本；从转化率监控的数据中，得出带来利润的增长；从PV和UV的日线分析出用户活跃度的趋势</p>\",\"frontmatter\":{\"title\":\"前端工程师的一专多长\",\"tags\":[\"前端\"],\"categories\":[\"编程\"],\"date\":\"May 17, 2018\"}}},\"pathContext\":{\"slug\":\"/前端工程师的一专多长/\",\"previous\":{\"fields\":{\"slug\":\"/graphql-intro/\"},\"frontmatter\":{\"path\":\"/graphql-introduction\",\"title\":\"GraphQL: Basics\",\"tags\":[\"graphql\"],\"categories\":[\"dev\"]}},\"next\":{\"fields\":{\"slug\":\"/Babel笔记/\"},\"frontmatter\":{\"path\":\"/babel-notes\",\"title\":\"Babel笔记\",\"tags\":[\"Javascript\"],\"categories\":[\"编程\"]}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---前端工程师的一专多长-cff86bd2be5630b66a9d.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Elvin's Blog\",\"author\":\"Elvin Ma\"}},\"markdownRemark\":{\"id\":\"/Users/maxingcong/Code/blog/src/pages/前端工程师的一专多长.md absPath of file >>> MarkdownRemark\",\"html\":\"<h5>技术的道路</h5>\\n<p>技术的学习状态可以分为四种：学习技能 - 得出成果 - 提炼技术 - 升华为哲学</p>\\n<p>在工作中，前端是一个与设计、产品、后台、运营以及用户都有很多交集的领域，导致前端工作内容常常很广泛，比如在前端通常需要能够指出不好的体验设计或者交互设计，要与后台一起规范化接口的设计，要与运营一同考虑用户的打开场景，对运营创意提供实现方案和斟酌成本，前端</p>\\n<h5>工具化思维</h5>\\n<p>工具化的主要目的是提升效率，节约人力成本</p>\\n<p>现在很多团队都采用螺旋瀑布式开发的开发，产生了很多重复造轮子的工具，也就存在可以通过工具化来优化的地方，举一些公司内部的例子来看：</p>\\n<p>比如设计需求的管理，包括公司已购版权的图片或者字体，还有通用的VI设计，以前没有统一的平台可以获取想着信息，而且各个团队自己去抢设计资源，直到后来有了 dcloud设计云，  </p>\\n<p>比如在公司内外部发邮件，通过 signature.oa.com生成自己的邮件签名，可以让邮件沟通更加规范和权威</p>\\n<p>比如CDC的图片自动提交系统，自动压缩，自动生成雪碧图，设计师更新图片后便可以自行操作，减少了工作环节和沟通成本</p>\\n<p>比如鲁班智能设计系统，节约了很多设计人力，满足了很多常规和紧急的运营需求</p>\\n<h5>从技术到哲学</h5>\\n<p>做技术，和做生意，甚至和炒股都有一些共性的地方存在，不同领域的技术常常也有可以相互学习借鉴的点</p>\\n<p>很多事情的出发点都是成本和利润，比如从前端的文件优化的大小和数量中去抠数据，计算出节约的带宽成本；从转化率监控的数据中，得出带来利润的增长；从PV和UV的日线分析出用户活跃度的趋势</p>\",\"frontmatter\":{\"title\":\"前端工程师的一专多长\",\"tags\":[\"前端\"],\"categories\":[\"编程\"],\"date\":\"May 17, 2018\"}}},\"pathContext\":{\"slug\":\"/前端工程师的一专多长/\",\"previous\":{\"fields\":{\"slug\":\"/graphql-intro/\"},\"frontmatter\":{\"path\":\"/graphql-introduction\",\"title\":\"GraphQL: Basics\",\"tags\":[\"graphql\"],\"categories\":[\"dev\"]}},\"next\":{\"fields\":{\"slug\":\"/Babel笔记/\"},\"frontmatter\":{\"path\":\"/babel-notes\",\"title\":\"Babel笔记\",\"tags\":[\"Javascript\"],\"categories\":[\"编程\"]}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/前端工程师的一专多长.json\n// module id = 518\n// module chunks = 245073411151466"],"sourceRoot":""}