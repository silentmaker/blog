webpackJsonp([33805935564660],{457:function(a,n){a.exports={data:{site:{siteMetadata:{title:"Elvin's Blog",author:"Elvin Ma"}},markdownRemark:{id:"/Users/maxingcong/Code/blog/src/pages/Javascript忍者禁术笔记-Runtime.md absPath of file >>> MarkdownRemark",html:'<h3>运行机制</h3>\n<p>javascript是解释型语言，采用JIT(Just In Time)机制，运行用机器码并不是提前生成的(AOT, Ahead Of Time)，这是与C等编译型语言的主要不同之一，javascript还具有很多独特的语言特性：</p>\n<ul>\n<li>函数作为一等公民</li>\n<li>函数闭包</li>\n<li>基于原型的面向对象</li>\n</ul>\n<h3>运行环境</h3>\n<p>在客户端和服务端的运行环境有所不同</p>\n<p><img src="/Users/maxingcong/Code/blog/src/pages/images/runtime-difference.png" alt="Runtime"></p>\n<h3>Web应用的生命周期</h3>\n<p><img src="/Users/maxingcong/Code/blog/src/pages/images/webapp-lifecycle.png" alt="Life Cycle"></p>\n<p>基本分成两步：Page Building 阶段和 Event Handling 阶段</p>\n<h3>Page Building 阶段</h3>\n<p>在 Page Building 阶段主要做两件事： </p>\n<p>1 解析HTML并构建DOM </p>\n<p>2 遇到script标签时，运行 Javascript 代码 </p>\n<p>浏览器在有需要的情况下会不停在1和2间切换</p>\n<p><img src="/Users/maxingcong/Code/blog/src/pages/images/dom-endurance.png" alt="DOM Building"></p>\n<p>同时，浏览器会自动容错，构建可用的DOM</p>\n<h3>Event handling阶段</h3>\n<p><img src="/Users/maxingcong/Code/blog/src/pages/images/event-handling.png" alt="Event Handling"></p>\n<p>这个阶段有很多种事件可能会被触发：浏览器事件(如load)，网络事件(如ajax)，用户事件(如click)，定时器事件(如setTimeout)等，用户和服务器生成的事件通常放在同个队列里依次执行，绑定事件的方法一般是对特殊属性(如onload)赋值或者使用addEventListener方法</p>',frontmatter:{title:"Javascript忍者禁术笔记-Runtime",tags:["javascript"],categories:["编程"],date:"April 10, 2017"}}},pathContext:{slug:"/Javascript忍者禁术笔记-Runtime/",previous:{fields:{slug:"/JS的模块系统/"},frontmatter:{path:"/js-module-system",title:"JS的模块系统",tags:["javascript"],categories:["编程"]}},next:{fields:{slug:"/Javascript忍者禁术笔记-Function/"},frontmatter:{path:"/javascript-ninja-function",title:"Javascript忍者禁术笔记-Function",tags:["javascript"],categories:["编程"]}}}}}});
//# sourceMappingURL=path---javascript忍者禁术笔记-runtime-3c78884a9a1d046ef647.js.map