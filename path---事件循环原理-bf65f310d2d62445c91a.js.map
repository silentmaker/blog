{"version":3,"sources":["webpack:///path---事件循环原理-bf65f310d2d62445c91a.js","webpack:///./.cache/json/事件循环原理.json"],"names":["webpackJsonp","511","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","tags","categories","date","pathContext","slug","previous","fields","path","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,eAAAC,OAAA,aAA4CC,gBAAmBC,GAAA,qFAAAC,KAAA,oxSAA+kTC,aAA2LL,MAAA,OAAAM,MAAA,cAAAC,YAAA,MAAAC,KAAA,uBAAsFC,aAAgBC,KAAA,WAAAC,UAA8BC,QAAUF,KAAA,sBAA4BL,aAAgBQ,KAAA,2BAAAb,MAAA,mBAAAM,MAAA,cAAAC,YAAA,QAAwGO,MAASF,QAAUF,KAAA,YAAkBL,aAAgBQ,KAAA,0BAAAb,MAAA,SAAAM,MAAA,cAAAC,YAAA","file":"path---事件循环原理-bf65f310d2d62445c91a.js","sourcesContent":["webpackJsonp([224641556761869],{\n\n/***/ 511:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Elvin's Blog\",\"author\":\"Elvin Ma\"}},\"markdownRemark\":{\"id\":\"/Users/maxingcong/Code/blog/src/pages/事件循环原理.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>推荐视频：</p>\\n<p><a href=\\\"https://www.youtube.com/watch?v=8aGhZQkoFbQ\\\">Philip Roberts  JSConf EU 2014</a></p>\\n<p><a href=\\\"https://www.youtube.com/watch?v=u1kqx6AenYw\\\">Erin Zimmer JSConf EU 2018</a></p>\\n<p><a href=\\\"https://www.youtube.com/watch?v=cCOL7MC4Pl0\\\">Jake Archibald JSConf.Asia 2018</a></p>\\n<p>Javascription的运行时环境其实最核心的两个部分就是Call Stack和Memory Heap，分别用于记录执行上下文和内存分配，而浏览器提供的则是web api，其中最重要的有DOM、Ajax和Timer</p>\\n<p><img src=\\\"/Users/maxingcong/Code/blog/src/pages/images/js-runtime.png\\\" alt=\\\"JS Runtime\\\"></p>\\n<p>而事件循环好比一个不断循环的消费者，每次从任务队伍里拿出一个任务来执行，直到主线程被释放时才进入下一个事件循环，任务队伍也分几条，比如渲染队列，动画队列，微任务队列和宏任务队列</p>\\n<p>渲染队列renderQueue负责在渲染的每一帧的进行layout、paint和composite等工作</p>\\n<p>动画队列animateQueue则主要是requestAnimationFrame的回调</p>\\n<p>微任务队列microTaskQueue则主要是Promise、process.nextTick、Object.observe和MutationObserver的回调</p>\\n<p>宏任务队列macroTaskQueue则主要是setTimeout、setInterval、setImmediate和IO/UI渲染的事件回调</p>\\n<p>用伪代码描述事件循环如下：</p>\\n<p>浏览器端：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    queue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getNextQueue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    task <span class=\\\"token operator\\\">=</span> queue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pop</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">execute</span><span class=\\\"token punctuation\\\">(</span>task<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    \\n    <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>microTaskQueue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">doMicroTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    \\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isRepaintTime<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        animateTasks <span class=\\\"token operator\\\">=</span> animateQueue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">copyTasks</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span>task <span class=\\\"token keyword\\\">in</span> animateTasks<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">doAnimateTask</span><span class=\\\"token punctuation\\\">(</span>task<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n       \\t<span class=\\\"token function\\\">repaint</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Node端：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">taskAreWaiting</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    queue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getNextQueue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    \\n    <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>queue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        task <span class=\\\"token operator\\\">=</span> queue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pop</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token function\\\">execute</span><span class=\\\"token punctuation\\\">(</span>task<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>nextTickQueue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">doNextTickTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>promiseQueue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">doPromiseTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>由于存在调用栈的原因，在代码中模拟触发事件回调，执行顺序可能会有所不同：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\">button<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'click'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'micro1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'listener1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nbutton<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'click'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'micro2'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'listener2'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 用户点击 listener1 micro1 listener2 micro2</span>\\nbutton<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// listener1 listener2 micro1 micro2</span>\\n<span class=\\\"token comment\\\">// 因为click还在调用域中，主线程未释放</span></code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"事件循环\",\"tags\":[\"javascript\"],\"categories\":[\"编程\"],\"date\":\"November 26, 2017\"}}},\"pathContext\":{\"slug\":\"/事件循环原理/\",\"previous\":{\"fields\":{\"slug\":\"/一个极简的Promise垫片实现/\"},\"frontmatter\":{\"path\":\"/a-tiny-promise-polyfill\",\"title\":\"一个极简的Promise垫片实现\",\"tags\":[\"javascript\"],\"categories\":[\"编程\"]}},\"next\":{\"fields\":{\"slug\":\"/箭头函数总结/\"},\"frontmatter\":{\"path\":\"/arrow-function-summary\",\"title\":\"箭头函数总结\",\"tags\":[\"Javascript\"],\"categories\":[\"编程\"]}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---事件循环原理-bf65f310d2d62445c91a.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Elvin's Blog\",\"author\":\"Elvin Ma\"}},\"markdownRemark\":{\"id\":\"/Users/maxingcong/Code/blog/src/pages/事件循环原理.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>推荐视频：</p>\\n<p><a href=\\\"https://www.youtube.com/watch?v=8aGhZQkoFbQ\\\">Philip Roberts  JSConf EU 2014</a></p>\\n<p><a href=\\\"https://www.youtube.com/watch?v=u1kqx6AenYw\\\">Erin Zimmer JSConf EU 2018</a></p>\\n<p><a href=\\\"https://www.youtube.com/watch?v=cCOL7MC4Pl0\\\">Jake Archibald JSConf.Asia 2018</a></p>\\n<p>Javascription的运行时环境其实最核心的两个部分就是Call Stack和Memory Heap，分别用于记录执行上下文和内存分配，而浏览器提供的则是web api，其中最重要的有DOM、Ajax和Timer</p>\\n<p><img src=\\\"/Users/maxingcong/Code/blog/src/pages/images/js-runtime.png\\\" alt=\\\"JS Runtime\\\"></p>\\n<p>而事件循环好比一个不断循环的消费者，每次从任务队伍里拿出一个任务来执行，直到主线程被释放时才进入下一个事件循环，任务队伍也分几条，比如渲染队列，动画队列，微任务队列和宏任务队列</p>\\n<p>渲染队列renderQueue负责在渲染的每一帧的进行layout、paint和composite等工作</p>\\n<p>动画队列animateQueue则主要是requestAnimationFrame的回调</p>\\n<p>微任务队列microTaskQueue则主要是Promise、process.nextTick、Object.observe和MutationObserver的回调</p>\\n<p>宏任务队列macroTaskQueue则主要是setTimeout、setInterval、setImmediate和IO/UI渲染的事件回调</p>\\n<p>用伪代码描述事件循环如下：</p>\\n<p>浏览器端：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    queue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getNextQueue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    task <span class=\\\"token operator\\\">=</span> queue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pop</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">execute</span><span class=\\\"token punctuation\\\">(</span>task<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    \\n    <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>microTaskQueue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">doMicroTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    \\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isRepaintTime<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        animateTasks <span class=\\\"token operator\\\">=</span> animateQueue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">copyTasks</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span>task <span class=\\\"token keyword\\\">in</span> animateTasks<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">doAnimateTask</span><span class=\\\"token punctuation\\\">(</span>task<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n       \\t<span class=\\\"token function\\\">repaint</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Node端：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">taskAreWaiting</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    queue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getNextQueue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    \\n    <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>queue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        task <span class=\\\"token operator\\\">=</span> queue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pop</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token function\\\">execute</span><span class=\\\"token punctuation\\\">(</span>task<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>nextTickQueue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">doNextTickTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>promiseQueue<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hasTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">doPromiseTask</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>由于存在调用栈的原因，在代码中模拟触发事件回调，执行顺序可能会有所不同：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\">button<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'click'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'micro1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'listener1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nbutton<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'click'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'micro2'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'listener2'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 用户点击 listener1 micro1 listener2 micro2</span>\\nbutton<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// listener1 listener2 micro1 micro2</span>\\n<span class=\\\"token comment\\\">// 因为click还在调用域中，主线程未释放</span></code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"事件循环\",\"tags\":[\"javascript\"],\"categories\":[\"编程\"],\"date\":\"November 26, 2017\"}}},\"pathContext\":{\"slug\":\"/事件循环原理/\",\"previous\":{\"fields\":{\"slug\":\"/一个极简的Promise垫片实现/\"},\"frontmatter\":{\"path\":\"/a-tiny-promise-polyfill\",\"title\":\"一个极简的Promise垫片实现\",\"tags\":[\"javascript\"],\"categories\":[\"编程\"]}},\"next\":{\"fields\":{\"slug\":\"/箭头函数总结/\"},\"frontmatter\":{\"path\":\"/arrow-function-summary\",\"title\":\"箭头函数总结\",\"tags\":[\"Javascript\"],\"categories\":[\"编程\"]}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/事件循环原理.json\n// module id = 511\n// module chunks = 224641556761869"],"sourceRoot":""}