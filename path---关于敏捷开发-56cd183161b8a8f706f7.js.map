{"version":3,"sources":["webpack:///path---关于敏捷开发-56cd183161b8a8f706f7.js","webpack:///./.cache/json/关于敏捷开发.json"],"names":["webpackJsonp","514","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","tags","categories","date","pathContext","slug","previous","fields","path","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,eAAAC,OAAA,aAA4CC,gBAAmBC,GAAA,qFAAAC,KAAA,klBAAAC,aAAksBL,MAAA,SAAAM,MAAA,QAAAC,YAAA,MAAAC,KAAA,uBAAkFC,aAAgBC,KAAA,WAAAC,UAA8BC,QAAUF,KAAA,aAAmBL,aAAgBQ,KAAA,aAAAb,MAAA,UAAAM,MAAA,OAAAC,YAAA,QAA0EO,MAASF,QAAUF,KAAA,aAAmBL,aAAgBQ,KAAA,wBAAAb,MAAA,cAAAM,MAAA,MAAAC,YAAA","file":"path---关于敏捷开发-56cd183161b8a8f706f7.js","sourcesContent":["webpackJsonp([86114944496880],{\n\n/***/ 514:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Elvin's Blog\",\"author\":\"Elvin Ma\"}},\"markdownRemark\":{\"id\":\"/Users/maxingcong/Code/blog/src/pages/关于敏捷开发.md absPath of file >>> MarkdownRemark\",\"html\":\"<h3>从沟通开始</h3>\\n<p>一个产品或者产品功能的生命周期，都要经过确定目标、评估方案、落实执行、测试回归和上线运维等步骤，开发的介入其实在第一步的时候就已经可以开始，不过大多时候敏捷模式的团队都不一定会这么做，尽早介入是为了让开发先了解需求的目标，同时可以尽早地开始收集可行方案。</p>\\n<p>我在项目中遇到过开发与开发(或者开发与产品)对需求理解不一致的情况，当然就事论事的原因可能会有很多，人的问题要从人的角度出发去解决，关键还是培养人的沟通意识，简单梳理下的话，好的沟通应该是可靠的，及时的，并且是有效的：</p>\\n<p><strong>可靠性</strong>：就好像TCP和UDP的关系，可靠的连接应该是有确认反馈的，英语说就是『I know you know.』，不可靠的沟通只是『I hope you know.』</p>\\n<p><strong>及时性</strong>：就好像js中的同步操作和异步操作，如果是紧急/重要的工作应该同步执行，而不能只是简单地叫人记得做什么，要及时地反馈进度，而相反地，不紧急/不重要的任务可以记下来以后做/有空再跟进</p>\\n<p><strong>有效性</strong>：主要在于两点，提前沟通和注重落实，临时插活或者光说不做都是不可取的</p>\\n<h3>快速成型</h3>\\n<h3>所谓中台建设</h3>\",\"frontmatter\":{\"title\":\"关于敏捷开发\",\"tags\":[\"项目管理\"],\"categories\":[\"随笔\"],\"date\":\"November 26, 2018\"}}},\"pathContext\":{\"slug\":\"/关于敏捷开发/\",\"previous\":{\"fields\":{\"slug\":\"/CDN基础总结/\"},\"frontmatter\":{\"path\":\"/cdn-notes\",\"title\":\"CDN基础总结\",\"tags\":[\"Web\"],\"categories\":[\"编程\"]}},\"next\":{\"fields\":{\"slug\":\"/关于学习和实践/\"},\"frontmatter\":{\"path\":\"/thoughts-on-learning\",\"title\":\"关于学习积累的一些思考\",\"tags\":[\"学习\"],\"categories\":[\"随笔\"]}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---关于敏捷开发-56cd183161b8a8f706f7.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Elvin's Blog\",\"author\":\"Elvin Ma\"}},\"markdownRemark\":{\"id\":\"/Users/maxingcong/Code/blog/src/pages/关于敏捷开发.md absPath of file >>> MarkdownRemark\",\"html\":\"<h3>从沟通开始</h3>\\n<p>一个产品或者产品功能的生命周期，都要经过确定目标、评估方案、落实执行、测试回归和上线运维等步骤，开发的介入其实在第一步的时候就已经可以开始，不过大多时候敏捷模式的团队都不一定会这么做，尽早介入是为了让开发先了解需求的目标，同时可以尽早地开始收集可行方案。</p>\\n<p>我在项目中遇到过开发与开发(或者开发与产品)对需求理解不一致的情况，当然就事论事的原因可能会有很多，人的问题要从人的角度出发去解决，关键还是培养人的沟通意识，简单梳理下的话，好的沟通应该是可靠的，及时的，并且是有效的：</p>\\n<p><strong>可靠性</strong>：就好像TCP和UDP的关系，可靠的连接应该是有确认反馈的，英语说就是『I know you know.』，不可靠的沟通只是『I hope you know.』</p>\\n<p><strong>及时性</strong>：就好像js中的同步操作和异步操作，如果是紧急/重要的工作应该同步执行，而不能只是简单地叫人记得做什么，要及时地反馈进度，而相反地，不紧急/不重要的任务可以记下来以后做/有空再跟进</p>\\n<p><strong>有效性</strong>：主要在于两点，提前沟通和注重落实，临时插活或者光说不做都是不可取的</p>\\n<h3>快速成型</h3>\\n<h3>所谓中台建设</h3>\",\"frontmatter\":{\"title\":\"关于敏捷开发\",\"tags\":[\"项目管理\"],\"categories\":[\"随笔\"],\"date\":\"November 26, 2018\"}}},\"pathContext\":{\"slug\":\"/关于敏捷开发/\",\"previous\":{\"fields\":{\"slug\":\"/CDN基础总结/\"},\"frontmatter\":{\"path\":\"/cdn-notes\",\"title\":\"CDN基础总结\",\"tags\":[\"Web\"],\"categories\":[\"编程\"]}},\"next\":{\"fields\":{\"slug\":\"/关于学习和实践/\"},\"frontmatter\":{\"path\":\"/thoughts-on-learning\",\"title\":\"关于学习积累的一些思考\",\"tags\":[\"学习\"],\"categories\":[\"随笔\"]}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/关于敏捷开发.json\n// module id = 514\n// module chunks = 86114944496880"],"sourceRoot":""}